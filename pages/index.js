import Head from 'next/head'
import Navbar from '@components/Navbar';
import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
import Code from '@components/Code';

export default function Home() {

  const { scrollYProgress } = useScroll();
  const scaleX = useSpring(scrollYProgress, {
    stiffness: 100,
    damping: 30,
    restDelta: 0.001
  });

  const time = useTime();
  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });

  const draw = {
    hidden: { pathLength: 0, opacity: 0 },
    visible: (i) => {
      const delay = 1 + i * 0.5;
      return {
        pathLength: 1,
        opacity: 1,
        transition: {
          pathLength: { delay, type: "spring", duration: 1.5, bounce: 0 },
          opacity: { delay, duration: 0.01 }
        }
      };
    }
  };

  return (
    <>
      <Head>
        <title>Next Animation</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="dark:bg-neutral-900 min-h-screen pb-8">

        <Navbar />

        <div className="max-w-5xl px-4 mx-auto pt-4 ">
          <h1 className="dark:text-white text-2xl font-semibold mb-2">Next Animation</h1>

          <motion.h1
            className="dark:text-white"
            animate={{ x: [50, 150, 50], opacity: 1, scale: 1 }}
            transition={{
              duration: 5,
              delay: 0.3,
              ease: [0.5, 0.71, 1, 1.5],
            }}
            initial={{ opacity: 0, scale: 0.5 }}
            whileHover={{ scale: 1.2 }}
          >
            Animation made easy with Framer Motion
          </motion.h1>
          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
          
<motion.h1
  animate={{ x: [50, 150, 50], opacity: 1, scale: 1 }}
  transition={{
    duration: 5,
    delay: 0.3,
    ease: [0.5, 0.71, 1, 1.5],
  }}
  initial={{ opacity: 0, scale: 0.5 }}
  whileHover={{ scale: 1.2 }}
>
  Animation made easy with Framer Motion
</motion.h1>`} />

          <h4 className="dark:text-white font-medium text-xl mt-10 mb-2">Translate</h4>
          <motion.div animate={{ x: 20, y: 20 }} className="w-10 h-10 bg-red-500 mb-8" />
          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
          
<motion.div animate={{ x: 20, y: 20 }} className="w-10 h-10 bg-red-500" />`} />

          <h4 className="dark:text-white font-medium text-xl mt-10 mb-2">FadeIn</h4>
          <motion.div
            initial={{ opacity: 0, scale: 0.5 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ ease: "easeOut", duration: 2 }}
            className="w-10 h-10 bg-blue-500"
          />

          <motion.div
            className="w-10 h-10 bg-yellow-500 mt-4"
            initial={{ opacity: 0, scale: 0.5 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{
              duration: 0.8,
              delay: 0.5,
              ease: [0, 0.71, 0.2, 1.01]
            }}
          />

          <motion.div
            className="w-10 h-10 bg-purple-500 mt-4"
            initial={{ opacity: 0, scale: 0.5 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{
              default: {
                duration: 0.3,
                ease: [0, 0.71, 0.2, 1.01]
              },
              scale: {
                type: "spring",
                damping: 5,
                stiffness: 100,
                restDelta: 0.001
              }
            }}
          />

          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
          
<motion.div
  initial={{ opacity: 0, scale: 0.5 }}
  animate={{ opacity: 1, scale: 1 }}
  transition={{ ease: "easeOut", duration: 2 }}
  className="w-10 h-10 bg-blue-500"
/>

<motion.div
  className="w-10 h-10 bg-yellow-500 mt-4"
  initial={{ opacity: 0, scale: 0.5 }}
  animate={{ opacity: 1, scale: 1 }}
  transition={{
    duration: 0.8,
    delay: 0.5,
    ease: [0, 0.71, 0.2, 1.01]
  }}
/>

<motion.div
  className="w-10 h-10 bg-purple-500 mt-4"
  initial={{ opacity: 0, scale: 0.5 }}
  animate={{ opacity: 1, scale: 1 }}
  transition={{
    default: {
      duration: 0.3,
      ease: [0, 0.71, 0.2, 1.01]
    },
    scale: {
      type: "spring",
      damping: 5,
      stiffness: 100,
      restDelta: 0.001
    }
  }}
/>`} />

          <h4 className="dark:text-white font-medium text-xl mt-10 mb-4">Repeat</h4>
          <motion.div
            className="w-10 h-10 bg-red-500"
            animate={{
              scale: [1, 2, 2, 1, 1],
              rotate: [0, 0, 270, 270, 0],
              borderRadius: ["20%", "20%", "50%", "50%", "20%"],
            }}
            transition={{
              duration: 2,
              ease: "easeInOut",
              times: [0, 0.2, 0.5, 0.8, 1],
              repeat: Infinity,
              repeatDelay: 1
            }}
          />
          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
          
<motion.div
  className="w-10 h-10 bg-red-500"
  animate={{
    scale: [1, 2, 2, 1, 1],
    rotate: [0, 0, 270, 270, 0],
    borderRadius: ["20%", "20%", "50%", "50%", "20%"],
  }}
  transition={{
    duration: 2,
    ease: "easeInOut",
    times: [0, 0.2, 0.5, 0.8, 1],
    repeat: Infinity,
    repeatDelay: 1
  }}
/>`} />

          <h4 className="dark:text-white font-medium text-xl mt-10 mb-2">Hover</h4>
          <motion.div
            className="w-10 h-10 bg-green-500"
            whileHover={{ scale: 1.1 }}
            transition={{ type: "spring", stiffness: 400, damping: 10 }}
          />
          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
          
<motion.div
  className="w-10 h-10 bg-green-500"
  whileHover={{ scale: 1.1 }}
  transition={{ type: "spring", stiffness: 400, damping: 10 }}
/>`} />

          <h4 className="dark:text-white font-medium text-xl mt-10 mb-2">Hover Tap Click</h4>
          <motion.div
            className="w-10 h-10 bg-orange-500 mt-4"
            whileHover={{ scale: 1.2 }}
            whileTap={{ scale: 0.9 }}
            transition={{ type: "spring", stiffness: 400, damping: 17 }}
          />
          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
          
<motion.div
  className="w-10 h-10 bg-orange-500 mt-4"
  whileHover={{ scale: 1.2 }}
  whileTap={{ scale: 0.9 }}
  transition={{ type: "spring", stiffness: 400, damping: 17 }}
/>`} />

          <h4 className="dark:text-white font-medium text-xl mt-10 mb-2">Rotate</h4>

          <motion.svg style={{ rotate }} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" className="w-6 h-6 text-red-500">
            <path strokeLinecap="round" strokeLinejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
          </motion.svg>

          <motion.svg style={{ rotate }} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" className="w-6 h-6 text-blue-500">
            <path strokeLinecap="round" strokeLinejoin="round" d="M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.324.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 011.37.49l1.296 2.247a1.125 1.125 0 01-.26 1.431l-1.003.827c-.293.24-.438.613-.431.992a6.759 6.759 0 010 .255c-.007.378.138.75.43.99l1.005.828c.424.35.534.954.26 1.43l-1.298 2.247a1.125 1.125 0 01-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.57 6.57 0 01-.22.128c-.331.183-.581.495-.644.869l-.213 1.28c-.09.543-.56.941-1.11.941h-2.594c-.55 0-1.02-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 01-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 01-1.369-.49l-1.297-2.247a1.125 1.125 0 01.26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.932 6.932 0 010-.255c.007-.378-.138-.75-.43-.99l-1.004-.828a1.125 1.125 0 01-.26-1.43l1.297-2.247a1.125 1.125 0 011.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281z" />
            <path strokeLinecap="round" strokeLinejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
          </motion.svg>

          <motion.div className="absolute" style={{ rotate }} >
            <svg height="56" width="56" viewBox="0 0 56 56">
              <path d="M29.465,0.038373A28,28,0,0,1,52.948,40.712L51.166,39.804A26,26,0,0,0,29.361,2.0356Z" className="text-orange-400" fill="currentColor"></path>
              <path d="M51.483,43.250A28,28,0,0,1,4.5172,43.250L6.1946,42.161A26,26,0,0,0,49.805,42.161Z" className="text-teal-400" fill="currentColor"></path>
              <path d="M3.0518,40.712A28,28,0,0,1,26.535,0.038373L26.639,2.0356A26,26,0,0,0,4.8338,39.804Z" className="text-blue-400" fill="currentColor"></path>
            </svg>
          </motion.div>

          <motion.div className="w-10 h-10 bg-red-500 mt-20" style={{ rotate }} />
          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
          
const time = useTime();
const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });

<motion.div className="absolute" style={{ rotate }} >
  <svg height="56" width="56" viewBox="0 0 56 56">
    <path d="M29.465,0.038373A28,28,0,0,1,52.948,40.712L51.166,39.804A26,26,0,0,0,29.361,2.0356Z" className="text-yellow-600" fill="currentColor"></path>
    <path d="M51.483,43.250A28,28,0,0,1,4.5172,43.250L6.1946,42.161A26,26,0,0,0,49.805,42.161Z" className="text-blue-600" fill="currentColor"></path>
    <path d="M3.0518,40.712A28,28,0,0,1,26.535,0.038373L26.639,2.0356A26,26,0,0,0,4.8338,39.804Z" className="text-red-600" fill="currentColor"></path>
  </svg>
</motion.div>

<motion.div className="w-10 h-10 bg-red-500 mt-24" style={{ rotate }} />`} />

          <h4 className="dark:text-white font-medium text-xl mt-10 mb-2">SVG line drawing</h4>
          <motion.svg
            width="200"
            height="200"
            viewBox="0 0 600 600"
            initial="hidden"
            animate="visible"
          >
            <motion.circle
              cx="100"
              cy="100"
              r="80"
              stroke="#ff0055"
              variants={draw}
              custom={1}
            />
            <motion.line
              x1="220"
              y1="30"
              x2="360"
              y2="170"
              stroke="#00cc88"
              variants={draw}
              custom={2}
            />
            <motion.line
              x1="220"
              y1="170"
              x2="360"
              y2="30"
              stroke="#00cc88"
              variants={draw}
              custom={2.5}
            />
            <motion.rect
              width="140"
              height="140"
              x="410"
              y="30"
              rx="20"
              stroke="#0099ff"
              variants={draw}
              custom={3}
            />
          </motion.svg>
          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";

const draw = {
  hidden: { pathLength: 0, opacity: 0 },
  visible: (i) => {
    const delay = 1 + i * 0.5;
    return {
      pathLength: 1,
      opacity: 1,
      transition: {
        pathLength: { delay, type: "spring", duration: 1.5, bounce: 0 },
        opacity: { delay, duration: 0.01 }
      }
    };
  }
};

<motion.svg
  width="200"
  height="200"
  viewBox="0 0 600 600"
  initial="hidden"
  animate="visible"
>
  <motion.circle
    cx="100"
    cy="100"
    r="80"
    stroke="#ff0055"
    variants={draw}
    custom={1}
  />
  <motion.line
    x1="220"
    y1="30"
    x2="360"
    y2="170"
    stroke="#00cc88"
    variants={draw}
    custom={2}
  />
  <motion.line
    x1="220"
    y1="170"
    x2="360"
    y2="30"
    stroke="#00cc88"
    variants={draw}
    custom={2.5}
  />
  <motion.rect
    width="140"
    height="140"
    x="410"
    y="30"
    rx="20"
    stroke="#0099ff"
    variants={draw}
    custom={3}
  />
</motion.svg>

<style jsx global>{'
  circle,
  rect,
  line {
    stroke-width: 10px;
    stroke-linecap: round;
    fill: transparent;
  }
'}
</style>`} />

          <h4 className="dark:text-white font-medium text-xl mt-10 mb-2">Scroll Progress</h4>
          <div className="relative">
            <motion.div className="bg-red-500 h-2 left-0 sticky top-14 right-0 origin-[0%]" style={{ scaleX }} />
            <LoremIpsum />
          </div>
          <Code code={`import { motion, useScroll, useSpring, useTime, useTransform } from "framer-motion";
          
const { scrollYProgress } = useScroll();
const scaleX = useSpring(scrollYProgress, {
  stiffness: 100,
  damping: 30,
  restDelta: 0.001
});

<div className="relative">
  <motion.div className="bg-red-500 h-2 left-0 sticky top-14 right-0 origin-[0%]" style={{ scaleX }} />
  <LoremIpsum />
</div>`} />

        </div>
      </main >
      <style jsx global>{`
        circle,
        rect,
        line {
          stroke-width: 10px;
          stroke-linecap: round;
          fill: transparent;
        }
      `}
      </style>
    </>

  )
}



function LoremIpsum() {
  return (
    <>
      <article className="dark:text-gray-200 mt-3">
        <p>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ac
          rhoncus quam.
        </p>
        <p>
          Fringilla quam urna. Cras turpis elit, euismod eget ligula quis,
          imperdiet sagittis justo. In viverra fermentum ex ac vestibulum.
          Aliquam eleifend nunc a luctus porta. Mauris laoreet augue ut felis
          blandit, at iaculis odio ultrices. Nulla facilisi. Vestibulum cursus
          ipsum tellus, eu tincidunt neque tincidunt a.
        </p>
        <h2>Sub-header</h2>
        <p>
          In eget sodales arcu, consectetur efficitur metus. Duis efficitur
          tincidunt odio, sit amet laoreet massa fringilla eu.
        </p>
        <p>
          Pellentesque id lacus pulvinar elit pulvinar pretium ac non urna.
          Mauris id mauris vel arcu commodo venenatis. Aliquam eu risus arcu.
          Proin sit amet lacus mollis, semper massa ut, rutrum mi.
        </p>
        <p>Sed sem nisi, luctus consequat ligula in, congue sodales nisl.</p>
        <p>
          Vestibulum bibendum at erat sit amet pulvinar. Pellentesque pharetra
          leo vitae tristique rutrum. Donec ut volutpat ante, ut suscipit leo.
        </p>
        <h2>Sub-header</h2>
        <p>
          Maecenas quis elementum nulla, in lacinia nisl. Ut rutrum fringilla
          aliquet. Pellentesque auctor vehicula malesuada. Aliquam id feugiat
          sem, sit amet tempor nulla. Quisque fermentum felis faucibus, vehicula
          metus ac, interdum nibh. Curabitur vitae convallis ligula. Integer ac
          enim vel felis pharetra laoreet. Interdum et malesuada fames ac ante
          ipsum primis in faucibus. Pellentesque hendrerit ac augue quis
          pretium.
        </p>
        <p>
          Morbi ut scelerisque nibh. Integer auctor, massa non dictum tristique,
          elit metus efficitur elit, ac pretium sapien nisl nec ante. In et ex
          ultricies, mollis mi in, euismod dolor.
        </p>
        <p>Quisque convallis ligula non magna efficitur tincidunt.</p>
        <p>
          Pellentesque id lacus pulvinar elit pulvinar pretium ac non urna.
          Mauris id mauris vel arcu commodo venenatis. Aliquam eu risus arcu.
          Proin sit amet lacus mollis, semper massa ut, rutrum mi.
        </p>
        <p>Sed sem nisi, luctus consequat ligula in, congue sodales nisl.</p>
        <p>
          Vestibulum bibendum at erat sit amet pulvinar. Pellentesque pharetra
          leo vitae tristique rutrum. Donec ut volutpat ante, ut suscipit leo.
        </p>
        <p>Quisque convallis ligula non magna efficitur tincidunt.</p>
        <p>
          Pellentesque id lacus pulvinar elit pulvinar pretium ac non urna.
          Mauris id mauris vel arcu commodo venenatis. Aliquam eu risus arcu.
          Proin sit amet lacus mollis, semper massa ut, rutrum mi.
        </p>
        <p>Sed sem nisi, luctus consequat ligula in, congue sodales nisl.</p>
        <p>
          Vestibulum bibendum at erat sit amet pulvinar. Pellentesque pharetra
          leo vitae tristique rutrum. Donec ut volutpat ante, ut suscipit leo.
        </p>
      </article>
    </>
  );
}