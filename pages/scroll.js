import Head from 'next/head'
import Navbar from '@components/Navbar';
import { motion, useTransform, useScroll } from "framer-motion";
import Code from '@components/Code';

export default function Scroll() {

  const rainbow = [
    "#FF0000",
    "#FF7F00",
    "#FFFF00",
    "#00FF00",
    "#0000FF",
    "#4B0082",
    "#9400D3"
  ];

  const { scrollYProgress } = useScroll();
  const range = Array.from(Array(rainbow.length).keys()).map(
    (v) => v / (rainbow.length - 1)
  );
  const rainbowColors = useTransform(scrollYProgress, range, rainbow);
  const forwardX = useTransform(scrollYProgress, [0, 1], ["0%", "-100%"]);
  const backwardsX = useTransform(scrollYProgress, [0, 1], ["-100%", "0%"]);

  return (
    <>
      <Head>
        <title>Scroll Triggered animation (whileInView)</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="dark:bg-neutral-900 min-h-screen pb-8">

        <Navbar />

        <div className="max-w-5xl px-4 mx-auto pt-4">
          <h1 className="dark:text-white text-2xl font-semibold mb-2">Scroll Linked animation (useScroll, useTransform)</h1>

          <div className="my-16 overflow-hidden">
            <motion.p
              className="font-black whitespace-nowrap uppercase tracking-widest py-6"
              style={{
                x: forwardX,
                WebkitTextStrokeColor: rainbowColors,
                WebkitTextStroke: '4px currentColor',
                fontSize: 'calc(100vw / 8)',
              }}
            >
              {"Rainbow ".repeat(3).trim()}
            </motion.p>
            <motion.h1
              className="font-extrabold whitespace-nowrap uppercase text-8xl dark:text-white tracking-widest py-6"
              style={{ x: backwardsX }}
            >
              <span className="bg-clip-text text-transparent bg-gradient-to-r from-teal-400 to-purple-600">
                {"Rainbow ".repeat(3).trim()}
              </span>
            </motion.h1>
            <motion.p
              className="font-bold whitespace-nowrap uppercase text-7xl dark:text-white tracking-wider py-6"
              style={{ x: forwardX }}
            >
              <span className="bg-clip-text text-transparent bg-gradient-to-r from-red-400 to-yellow-600">
                {"Rainbow ".repeat(3).trim()}
              </span>
            </motion.p>
          </div>

          <Code code={`import { motion, useTransform, useScroll } from "framer-motion";

const rainbow = [ "#FF0000", "#FF7F00", "#FFFF00", "#00FF00", "#0000FF", "#4B0082", "#9400D3"];

const { scrollYProgress } = useScroll();
const range = Array.from(Array(rainbow.length).keys()).map(
  (v) => v / (rainbow.length - 1)
);
const rainbowColors = useTransform(scrollYProgress, range, rainbow);
const forwardX = useTransform(scrollYProgress, [0, 1], ["0%", "-100%"]);
const backwardsX = useTransform(scrollYProgress, [0, 1], ["-100%", "0%"]);
  
<div className="my-16 overflow-hidden"> // use overflow-hidden to prevent error in mobile view
  <motion.p
    className="font-black whitespace-nowrap uppercase tracking-widest py-6"
    style={{
      x: forwardX,
      WebkitTextStrokeColor: rainbowColors,
      WebkitTextStroke: '4px currentColor',
      fontSize: 'calc(100vw / 8)',
    }}
  >
    {"Rainbow ".repeat(3).trim()}
  </motion.p>
  <motion.h1
    className="font-extrabold whitespace-nowrap uppercase text-8xl dark:text-white tracking-widest py-6"
    style={{ x: backwardsX }}
  >
    <span className="bg-clip-text text-transparent bg-gradient-to-r from-teal-400 to-purple-600">
      {"Rainbow ".repeat(3).trim()}
    </span>
  </motion.h1>
  <motion.p
    className="font-bold whitespace-nowrap uppercase text-7xl dark:text-white tracking-wider py-6"
    style={{ x: forwardX }}
  >
    <span className="bg-clip-text text-transparent bg-gradient-to-r from-red-400 to-yellow-600">
      {"Rainbow ".repeat(3).trim()}
    </span>
  </motion.p>
</div> `} />

        </div>
      </main >
    </>
  )
}